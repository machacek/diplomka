#!/bin/bash

set -o pipefail
function die() { echo "$@" | tee FAILED >&2; exit 1 ; }

PLAYGROUND=$(eman path)

# Ensure all the required variables are set (or provide the default)
eman \
  defvar SCORERS default="-s BLEU -s PER -s TER -s CDER" \
    help="scorers you want to use, you have to prefix each scorer with -s or --sctype." \
  defvar TRANSSTEP type=optstep default='' \
    help="translation step, implies corpora and factor if given" \
  defvar MOSESSTEP type=reqstep inherit=TRANSSTEP \
    help="the step containing compiled tools" \
  defvar TESTCORP inherit=TRANSSTEP help="the translated corpus" \
  defvar TRANSAUG inherit=TRANSSTEP:TOKAUG help="translation language+factors" \
  defvar REFAUGS inherit=TRANSSTEP:REFAUG \
    help="reference language+factors; use ':' to delimit multiple references" \
|| exit 1

# Set local bash variables
eval `eman bash-loadvars`

# add all reference corpora to dependencies
deps_to_add=""
function ensure_and_add_to_deps() {
  corpstep=$($PLAYGROUND/corpman --init $1 | cut -f1)
  [ ! -z "$corpstep" ] || die "Corpus not found: $1"
  deps_to_add="$deps_to_add $corpstep"
}
idx=0
for i in $(echo "$REFAUGS" | tr ':' ' '); do
  ensure_and_add_to_deps $TESTCORP/$i
  idx=$(($idx + 1))
done
eman add-deps . $deps_to_add

# Stop here if we are just initing ourselves
[ -z "$INIT_ONLY" ] || exit 0

MOSESSTEPDIR=`eman path $MOSESSTEP `

EVALUATOR=$MOSESSTEPDIR/moses/bin/evaluator

cat << KONEC > eman.command
# This is the command to be run here
echo "=============================="
echo "== Started:   "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
mydir=\$(pwd)
set -o pipefail
function die() { echo "\$@" >&2 ; eman fail \$mydir ; exit 1 ; }
renice 10 \$\$
ulimit -c 1 # core files limited to 1 byte

[ -x $EVALUATOR ] || die "Missing: $EVALUATOR"

function mkcorpus() {
  $PLAYGROUND/corpman --wait \$1 || die "Failed to prepare \$1"
  step_file_col=(\$($PLAYGROUND/corpman \$1))
  if [ "\${step_file_col[2]}" == "-1" ]; then
    STEPPATH=\$(eman path \${step_file_col[0]})
    $PLAYGROUND/../scripts/wiseln \$STEPPATH/\${step_file_col[1]} \\
      corpus.\$2.gz \
    || die "Failed to clone \$2 corpus \$1"
  else
    echo "Selecting the column from \$step_file_col"
    eval \$($PLAYGROUND/corpman --cmd \$1) \\
    | gzip -c > corpus.\$2.gz
  fi
}

mkcorpus $TESTCORP/$TRANSAUG translation
zcat corpus.translation.gz > corpus.translation

REFERENCES=''
idx=0
for i in $(echo "$REFAUGS" | tr ':' ' '); do
  mkcorpus $TESTCORP/\$i reference.\$idx
  zcat corpus.reference.\$idx.gz > corpus.reference.\$idx
  REFERENCES="\$REFERENCES,corpus.reference.\$idx"
  idx=\$((\$idx + 1))
done

REFERENCES=\`echo \$REFERENCES | sed 's/^,//'\`

echo "Running $EVALUATOR"
$EVALUATOR \\
    $SCORERS \\
    --reference \$REFERENCES \\
    --candidate corpus.translation \\
    --bootstrap 1000 \\
    --rseed 1234 \\
    | tee  scores \\
|| die "evaluator exit code is not 0"

# Standard command footer
echo Done.
eman succeed \$mydir
echo "=============================="
echo "== Ended:     "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
KONEC

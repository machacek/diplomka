#!/bin/bash
# Dan's WMT corpora preparation. An eman step seed that knows ÃšFAL paths to source files downloaded from the WMT web.
# The step preprocesses the downloaded corpus, saves the result and registers it with corpman.
# This solution is probably temporary. We may later want to replace it by standard corpus steps.

# Parallel training corpora
# CORPUS=newseuro PAIR=cs-en LANGUAGE=cs eman init korpus --start
# CORPUS=newseuro PAIR=cs-en LANGUAGE=en eman init korpus --start
# CORPUS=newseuro PAIR=de-en LANGUAGE=de eman init korpus --start
# CORPUS=newseuro PAIR=de-en LANGUAGE=en eman init korpus --start
# CORPUS=newseuro PAIR=es-en LANGUAGE=es eman init korpus --start
# CORPUS=newseuro PAIR=es-en LANGUAGE=en eman init korpus --start
# CORPUS=newseuro PAIR=fr-en LANGUAGE=fr eman init korpus --start
# CORPUS=newseuro PAIR=fr-en LANGUAGE=en eman init korpus --start
# CORPUS=newseuro PAIR=de-cs LANGUAGE=de eman init korpus --start
# CORPUS=newseuro PAIR=de-cs LANGUAGE=cs eman init korpus --start
# CORPUS=newseuro PAIR=es-cs LANGUAGE=es eman init korpus --start
# CORPUS=newseuro PAIR=es-cs LANGUAGE=cs eman init korpus --start
# CORPUS=newseuro PAIR=fr-cs LANGUAGE=fr eman init korpus --start
# CORPUS=newseuro PAIR=fr-cs LANGUAGE=cs eman init korpus --start

# New version of newseuro based on news-commentary-v8, released for WMT 2013
# CORPUS=news8euro PAIR=cs-en LANGUAGE=cs eman init korpus --start
# CORPUS=news8euro PAIR=cs-en LANGUAGE=en eman init korpus --start
# CORPUS=news8euro PAIR=de-en LANGUAGE=de eman init korpus --start
# CORPUS=news8euro PAIR=de-en LANGUAGE=en eman init korpus --start
# CORPUS=news8euro PAIR=es-en LANGUAGE=es eman init korpus --start
# CORPUS=news8euro PAIR=es-en LANGUAGE=en eman init korpus --start
# CORPUS=news8euro PAIR=fr-en LANGUAGE=fr eman init korpus --start
# CORPUS=news8euro PAIR=fr-en LANGUAGE=en eman init korpus --start
# CORPUS=news8euro PAIR=ru-en LANGUAGE=ru eman init korpus --start
# CORPUS=news8euro PAIR=ru-en LANGUAGE=en eman init korpus --start
# CORPUS=news8euro PAIR=de-cs LANGUAGE=de eman init korpus --start
# CORPUS=news8euro PAIR=de-cs LANGUAGE=cs eman init korpus --start
# CORPUS=news8euro PAIR=es-cs LANGUAGE=es eman init korpus --start
# CORPUS=news8euro PAIR=es-cs LANGUAGE=cs eman init korpus --start
# CORPUS=news8euro PAIR=fr-cs LANGUAGE=fr eman init korpus --start
# CORPUS=news8euro PAIR=fr-cs LANGUAGE=cs eman init korpus --start
# CORPUS=news8euro PAIR=ru-cs LANGUAGE=ru eman init korpus --start
# CORPUS=news8euro PAIR=ru-cs LANGUAGE=cs eman init korpus --start

# Large parallel corpora, not available for all language pairs
# CORPUS=czeng LANGUAGE=cs eman init korpus --start
# CORPUS=czeng LANGUAGE=en eman init korpus --start
# CORPUS=un PAIR=es-en LANGUAGE=es eman init korpus --start
# CORPUS=un PAIR=es-en LANGUAGE=en eman init korpus --start
# CORPUS=un PAIR=fr-en LANGUAGE=fr eman init korpus --start
# CORPUS=un PAIR=fr-en LANGUAGE=en eman init korpus --start
# CORPUS=gigafren LANGUAGE=fr eman init korpus --start
# CORPUS=gigafren LANGUAGE=en eman init korpus --start

# Monolingual training corpora
# CORPUS=newseuro LANGUAGE=cs eman init korpus --start
# CORPUS=newseuro LANGUAGE=de eman init korpus --start
# CORPUS=newseuro LANGUAGE=en eman init korpus --start
# CORPUS=newseuro LANGUAGE=es eman init korpus --start
# CORPUS=newseuro LANGUAGE=fr eman init korpus --start

# New version of newseuro based on news-commentary-v8, released for WMT 2013
# CORPUS=news8euro LANGUAGE=cs eman init korpus --start
# CORPUS=news8euro LANGUAGE=de eman init korpus --start
# CORPUS=news8euro LANGUAGE=en eman init korpus --start
# CORPUS=news8euro LANGUAGE=es eman init korpus --start
# CORPUS=news8euro LANGUAGE=fr eman init korpus --start
# CORPUS=news8euro LANGUAGE=ru eman init korpus --start

# CORPUS=newsall LANGUAGE=cs eman init korpus --start
# CORPUS=newsall LANGUAGE=de eman init korpus --start
# CORPUS=newsall LANGUAGE=en eman init korpus --start
# CORPUS=newsall LANGUAGE=es eman init korpus --start
# CORPUS=newsall LANGUAGE=fr eman init korpus --start

# New version of newsall for WMT 2013: new news from 2012; changed punctuation and added Russian for previous years
# (Old version will be removed later. We must select a unique name until that happens.)
# CORPUS=news8all LANGUAGE=cs eman init korpus --start
# CORPUS=news8all LANGUAGE=de eman init korpus --start
# CORPUS=news8all LANGUAGE=en eman init korpus --start
# CORPUS=news8all LANGUAGE=es eman init korpus --start
# CORPUS=news8all LANGUAGE=fr eman init korpus --start
# CORPUS=news8all LANGUAGE=ru eman init korpus --start

# CORPUS=gigaword LANGUAGE=en eman init korpus --start
# CORPUS=gigaword LANGUAGE=es eman init korpus --start
# CORPUS=gigaword LANGUAGE=fr eman init korpus --start

# Development and test data sets
# CORPUS=wmt2008 LANGUAGE=cs eman init korpus --start
# CORPUS=wmt2008 LANGUAGE=de eman init korpus --start
# CORPUS=wmt2008 LANGUAGE=en eman init korpus --start
# CORPUS=wmt2008 LANGUAGE=es eman init korpus --start
# CORPUS=wmt2008 LANGUAGE=fr eman init korpus --start
# CORPUS=wmt2009 LANGUAGE=cs eman init korpus --start
# CORPUS=wmt2009 LANGUAGE=de eman init korpus --start
# CORPUS=wmt2009 LANGUAGE=en eman init korpus --start
# CORPUS=wmt2009 LANGUAGE=es eman init korpus --start
# CORPUS=wmt2009 LANGUAGE=fr eman init korpus --start
# CORPUS=wmt2010 LANGUAGE=cs eman init korpus --start
# CORPUS=wmt2010 LANGUAGE=de eman init korpus --start
# CORPUS=wmt2010 LANGUAGE=en eman init korpus --start
# CORPUS=wmt2010 LANGUAGE=es eman init korpus --start
# CORPUS=wmt2010 LANGUAGE=fr eman init korpus --start
# CORPUS=wmt2011 LANGUAGE=cs eman init korpus --start
# CORPUS=wmt2011 LANGUAGE=de eman init korpus --start
# CORPUS=wmt2011 LANGUAGE=en eman init korpus --start
# CORPUS=wmt2011 LANGUAGE=es eman init korpus --start
# CORPUS=wmt2011 LANGUAGE=fr eman init korpus --start
# CORPUS=wmt2012 LANGUAGE=cs eman init korpus --start
# CORPUS=wmt2012 LANGUAGE=de eman init korpus --start
# CORPUS=wmt2012 LANGUAGE=en eman init korpus --start
# CORPUS=wmt2012 LANGUAGE=es eman init korpus --start
# CORPUS=wmt2012 LANGUAGE=fr eman init korpus --start
# CORPUS=wmt2012 LANGUAGE=ru eman init korpus --start
# CORPUS=wmt2013 LANGUAGE=cs eman init korpus --start
# CORPUS=wmt2013 LANGUAGE=de eman init korpus --start
# CORPUS=wmt2013 LANGUAGE=en eman init korpus --start
# CORPUS=wmt2013 LANGUAGE=es eman init korpus --start
# CORPUS=wmt2013 LANGUAGE=fr eman init korpus --start
# CORPUS=wmt2013 LANGUAGE=ru eman init korpus --start

function die() { echo "$@" >&2; exit 1; }
set -o pipefail  # safer pipes

# Ensure all the required variables are set (or provide the default)
# Note that we also require STATMT, which is constant w.r.t. individual experiments.
# However, we do not define it as one of the variables defining the step (because its value will be the same in all our experiments).
# It points to the current user's working copy of the StatMT repository. You should set it in your login config file.
[ -z "$STATMT" ] && die "\$STATMT must contain the full path to the root of your working copy of the StatMT repository (one level above playground)"
SCRIPTS=$STATMT/scripts
PLAYGROUND=$STATMT/playground
WMT=/net/data/wmt
eman \
     defvar CORPUS help='newseuro|news8euro|czeng|un|gigafren|newsall|gigaword|wmt2008|...|wmt2013' \
     defvar PAIR default='' help='select language pair of newseuro and un; empty for other corpora' \
     defvar LANGUAGE help='language code (create separate step for each language)' \
|| exit 1

# Set local bash variables
eval `eman bash-loadvars`

if ! [ -z "$PAIR" ] ; then
  REGCORPUS="$CORPUS.$PAIR"
else
  REGCORPUS=$CORPUS
fi
echo The corpus will be registered as "$REGCORPUS".

# Create corpman info.
# The first field "-1" indicates that there are no columns in the corpus file.
# The last field "0" indicates that this corpus is not derived automatically from other corpora.
$PLAYGROUND/corpman register -- corpus.txt.gz -1 $REGCORPUS $LANGUAGE form -1 0 \
  || die "Cannot register corpus"

if [ "$CORPUS" == "newseuro" ] ; then
  # cd $WMT
  # wget http://www.statmt.org/wmt12/training-parallel.tgz
  # untar it
  # cd $PLAYGROUND
  if [[ "$PAIR" =~ '-cs' ]] ; then
    READINPUT="zcat $WMT/training/europarl-v7.$PAIR/$LANGUAGE.gz $WMT/training/news-commentary-v7.$PAIR/$LANGUAGE.gz"
  elif [[ "$PAIR" =~ '-en' ]] ; then
    READINPUT="zcat $WMT/training/europarl-v7.$PAIR.$LANGUAGE.gz $WMT/training/news-commentary-v7.$PAIR.$LANGUAGE.gz"
  elif [ -z "$PAIR" ] ; then # monolingual version of newseuro
    READINPUT="zcat $WMT/training/europarl-v7.$LANGUAGE.gz $WMT/training/news-commentary-v7.$LANGUAGE.gz"
  else
    die "Unknown language pair $PAIR for corpus $CORPUS"
  fi
elif [ "$CORPUS" == "news8euro" ] ; then
  # cd $WMT
  # wget http://www.statmt.org/wmt13/training-parallel-europarl-v7.tgz
  # wget http://www.statmt.org/wmt13/training-parallel-nc-v8.tgz
  # untar it
  # cd $PLAYGROUND
  # There is no Russian Europarl.
  if [[ "$PAIR" =~ 'ru-cs' ]] ; then
    READINPUT="zcat $WMT/training/news-commentary-v8.$PAIR/$LANGUAGE.gz"
  elif [[ "$PAIR" =~ 'ru-en' ]] ; then
    READINPUT="zcat $WMT/training/news-commentary-v8.$PAIR.$LANGUAGE.gz"
  elif [[ "$PAIR" =~ '-cs' ]] ; then
    READINPUT="zcat $WMT/training/europarl-v7.$PAIR/$LANGUAGE.gz $WMT/training/news-commentary-v8.$PAIR/$LANGUAGE.gz"
  elif [[ "$PAIR" =~ '-en' ]] ; then
    READINPUT="zcat $WMT/training/europarl-v7.$PAIR.$LANGUAGE.gz $WMT/training/news-commentary-v8.$PAIR.$LANGUAGE.gz"
  elif [ -z "$PAIR" ] ; then # monolingual version of newseuro
    if [[ "$LANGUAGE" == "ru" ]] ; then # Russian without Europarl
      READINPUT="zcat $WMT/training/news-commentary-v8.$LANGUAGE.gz"
    else
      READINPUT="zcat $WMT/training/europarl-v7.$LANGUAGE.gz $WMT/training/news-commentary-v8.$LANGUAGE.gz"
    fi
  else
    die "Unknown language pair $PAIR for corpus $CORPUS"
  fi
elif [ "$CORPUS" == "czeng" ] ; then
  # No wget for Czeng. First, we can access it directly at ÃšFAL (/net/data/czeng10-public-release/).
  # Second, those outside ÃšFAL need a login name to download it (registration form at http://ufal.mff.cuni.cz/czeng/czeng10/).
  # Plain text format: Every file contains four columns. Czech sentence is in the third and English in the fourth column.
  perl='while(<>) { chomp; my @c = split("\t", $_); if("'$LANGUAGE'" eq "cs") { print "$c[2]\n" } else { print "$c[3]\n" } }'
  echo '#!/usr/bin/env perl' > column.pl
  echo $perl >> column.pl
  chmod 755 column.pl
  READINPUT="zcat /net/data/czeng10-public-release/data.plaintext-format/*train.gz | column.pl"
elif [ "$CORPUS" == "un" ] ; then
  if [ "$PAIR" == "es-en" ] ; then
    if [ "$LANGUAGE" != "es" ] && [ "$LANGUAGE" != "en" ] ; then
      die "Unknown language $LANGUAGE for pair $PAIR"
    fi
  elif [ "$PAIR" == "fr-en" ] ; then
    if [ "$LANGUAGE" != "fr" ] && [ "$LANGUAGE" != "en" ] ; then
      die "Unknown language $LANGUAGE for pair $PAIR"
    fi
  else
    die "Unknown language pair $PAIR for corpus $CORPUS"
  fi
  # cd $WMT
  # wget http://www.statmt.org/wmt12/un.es-en.tgz # 1,103,180,390 B
  # wget http://www.statmt.org/wmt12/un.fr-en.tgz # 1,262,447,173 B
  # untar it
  # cd $PLAYGROUND
  READINPUT="zcat $WMT/MultiUN4WMT12/undoc.2000.$PAIR.$LANGUAGE.gz"
elif [ "$CORPUS" == "gigafren" ] ; then
  if [ "$LANGUAGE" != "fr" ] && [ "$LANGUAGE" != "en" ] ; then
    die "Unknown language $LANGUAGE for corpus $CORPUS"
  fi
  # cd $WMT
  # wget http://www.statmt.org/wmt10/training-giga-fren.tar # 2,595,112,960 B
  # untar it
  # cd $PLAYGROUND
  READINPUT="zcat $WMT/giga-fren.release2.$LANGUAGE.gz"
###!!! Note that we can no longer create the old version of newsall.
###!!! The source packages have been overwritten by the new version.
#elif [ "$CORPUS" == "newsall" ] ; then
  # cd $WMT
  # wget http://www.statmt.org/wmt12/training-monolingual-news-2007.tgz
  # wget http://www.statmt.org/wmt12/training-monolingual-news-2008.tgz
  # wget http://www.statmt.org/wmt12/training-monolingual-news-2009.tgz
  # wget http://www.statmt.org/wmt12/training-monolingual-news-2010.tgz
  # wget http://www.statmt.org/wmt12/training-monolingual-news-2011.tgz
  # untar it
  # cd $PLAYGROUND
#  READINPUT="zcat $WMT/training-monolingual/news.*.$LANGUAGE.shuffled.gz"
elif [ "$CORPUS" == "news8all" ] ; then
  # cd $WMT
  # wget http://www.statmt.org/wmt13/training-monolingual-news-2007.tgz
  # wget http://www.statmt.org/wmt13/training-monolingual-news-2008.tgz
  # wget http://www.statmt.org/wmt13/training-monolingual-news-2009.tgz
  # wget http://www.statmt.org/wmt13/training-monolingual-news-2010.tgz
  # wget http://www.statmt.org/wmt13/training-monolingual-news-2011.tgz
  # wget http://www.statmt.org/wmt13/training-monolingual-news-2012.tgz
  # untar it
  # cd $PLAYGROUND
  READINPUT="zcat $WMT/training-monolingual/news.*.$LANGUAGE.shuffled.gz"
elif [ "$CORPUS" == "gigaword" ] ; then
  if [ "$LANGUAGE" != "en" ] && [ "$LANGUAGE" != "es" ] && [ "$LANGUAGE" != "fr" ] ; then
    die "Unknown language $LANGUAGE for corpus $CORPUS"
  fi
  READINPUT="$STATMT/projects/danwmt/gigaword.pl $LANGUAGE"
elif [[ "$CORPUS" =~ wmt20[01][890123] ]] ; then
  # cd $WMT
  # wget http://www.statmt.org/wmt13/dev.tgz
  # wget http://www.statmt.org/wmt13/test.tgz
  # untar it
  # cd $PLAYGROUND
  newstest=$(echo $CORPUS | sed 's/wmt/newstest/')
  READINPUT="$SCRIPTS/desgml.pl < $WMT/test/$newstest-src.$LANGUAGE.sgm"
else
  die "Unknown corpus $CORPUS"
fi

# Don't continue if we are not preparing the step yet
[ -z "$INIT_ONLY" ] || exit 0

cat > eman.command << KONEC
#!/bin/bash
echo "=============================="
echo "== Started:   "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
set -o pipefail
mydir=\$(pwd)
set -o pipefail
function die() { echo "\$@" >&2 ; eman fail \$mydir ; exit 1 ; }

expected_nl=-1
echo Processing $READINPUT
$READINPUT \\
  | $SCRIPTS/specchar.pl -l $LANGUAGE \\
  | $SCRIPTS/tok-dan.pl \\
  | $SCRIPTS/fill_empty_sentences.pl \\
  | $SCRIPTS/escape_pipe_lt_gt.pl \\
  | gzip -c > corpus.txt.gz \\
  || die "Failed to prepare the corpus"
echo "Checking output number of lines of corpus.txt.gz"
nl=\$(zcat corpus.txt.gz | wc -l)
if [ \$expected_nl -eq -1 ]; then
  echo "Re-registering the corpus with \$nl lines."
  $PLAYGROUND/corpman register -- corpus.txt.gz -1 $REGCORPUS $LANGUAGE form \$nl 0 \\
    || die "Cannot register corpus"
else
  # just a check
  [ "\$nl" -eq "\$expected_nl" ] \\
    || die "Mismatched number of lines, expected \$expected_nl, got \$nl"
fi

rm -f $PLAYGROUND/corpman.index \\
  || echo "Failed to force reindexing"

echo Done.
eman succeed \$mydir

echo "=============================="
echo "== Ended:     "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
KONEC

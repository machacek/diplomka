#!/bin/bash
# eman step to index large monolingual corpora

function die() { echo "$@" >&2; exit 1; }
set -o pipefail # safer pipes

# Ensure all the required variables are set (or provide the default)
eman \
   defvar SRCCORP help='input corpus to filter' \
   defvar SRCAUG help='lang+factors' \
|| exit 1

# Set local bash variables
eval `eman bash-loadvars`

PLAYGROUND=`eman path` # eman playground directory
WORKDIR=$(pwd)

echo "Checking if $SRCCORP/$SRCAUG is registered." >&2
$PLAYGROUND/corpman $SRCCORP/$SRCAUG \
  || die "$SRCCORP/$SRCAUG not found"

# Don`t continue if we are not preparing the step yet
[ -z "$INIT_ONLY" ] || exit 0

cat << KONEC > eman.command
#!/bin/bash
echo "============================"
echo "== Started:   "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\` 
echo "============================"
set -o pipefail
mydir=\$(pwd)
set -o pipefail
function die() { echo "\$@" >&2 ; eman fail \$mydir ; exit 1 ; }


function mkcorpus() {
  $PLAYGROUND/corpman --wait \$1 || die "Failed to prepare \$1"
  step_file_col=(\$($PLAYGROUND/corpman \$1))
  if [ "\${step_file_col[2]}" == "-1" ]; then
    $PLAYGROUND/../scripts/wiseln $PLAYGROUND/\${step_file_col[0]}/\${step_file_col[1]} \\
      corpus.\$2.gz \
    || die "Failed to clone \$2 corpus \$1"
  else
    echo "Selecting the column from \$step_file_col"
    eval \$($PLAYGROUND/corpman --cmd \$1) \\
    | gzip -c > corpus.\$2.gz
  fi
}

mkcorpus $SRCCORP/$SRCAUG txt

mkdir indexes \\
  || die "Failed to mkdir indexes"

cd $PLAYGROUND/LuceneIndexer \\
  || die "Failed to chdir to $PLAYGROUND/LuceneIndexer"

echo "Indexing $SRCCORP/$SRCAUG"
./index inputfile=$WORKDIR/corpus.txt.gz lucene.index.directory=$WORKDIR/indexes \\
|| die "Failed to prepare the index"

echo Done.
eman succeed \$mydir

echo "============================"
echo "== Ended:     "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "============================"

KONEC

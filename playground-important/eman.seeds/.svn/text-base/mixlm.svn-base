#!/bin/bash
# eman seed for constructing an n-gram language model by mixing
# several LMs for best perplexity on a heldout text

function die() { echo "$@" >&2; exit 1; }
set -o pipefail  # safer pipes

PLAYGROUND=`eman path` # eman playground directory

# Ensure all the required variables are set (or provide the default)
eman \
  defvar SRILMSTEP default='' \
    help='where is srilm compiled (default to inherit from first lm)' \
  defvar MOSESSTEP type=reqstep help='where is moses (for ems scripts)' \
  defvar LMS help='colon-delimited list of lm steps' \
  defvar HELDOUT help='the shortname of corpus' \
  defvar PROMISEAUGMATCH default='no' help='yes to ignore difference in corpaugs' \
|| exit 1

# Set local bash variables
eval `eman bash-loadvars`

# inherit from the first km
lmone=`echo $LMS | cut -d: -f1`

eman \
  defvar SRILMSTEP type='reqstep' default="$(eman get-var $lmone SRILMSTEP)" \
    help="Failed to inherit from $lmone" \
  defvar ORDER default="$(eman get-var $lmone ORDER)" \
    help="Failed to inherit from $lmone" \
  defvar CORPAUG default="$(eman get-var $lmone CORPAUG)" \
    help="Failed to inherit from $lmone" \
|| exit 1

# Set (update) local bash variables
eval `eman bash-loadvars`

eman add-deps . $SRILMSTEP $(echo $LMS | tr : ' ') \
|| die "Failed to resolve some dependencies"

MOSESSTEPDIR=$(eman path $MOSESSTEP)
SCRIPTS_ROOTDIR="$MOSESSTEPDIR/moses/scripts"

SRILMSTEPDIR=$(eman path $SRILMSTEP)
SRILMDIR1=$SRILMSTEPDIR/srilm/bin/
SRILMDIR2=$SRILMSTEPDIR/srilm/bin/i686/

first=1
for lmexp in ${LMS//:/ }; do
  lmdir=$(eman path $lmexp)
  [ ! -z "$lmdir" ] || die "Eman failed to find the path for $lmexp"
  [ -d $lmdir ] || die "Not found: $lmdir"
  thisorder=`eman get-var $lmexp ORDER`
  thisaug=`eman get-var $lmexp CORPAUG`
  thiscorp=`eman get-var $lmexp CORP`
  if [ $first == 1 ] ; then
    NAMELIST=$thiscorp
    LMFILES=$lmdir/corpus.lm
    first=0
  else
    # extend the list
    NAMELIST=$NAMELIST++$thiscorp
    LMFILES=$LMFILES:$lmdir/corpus.lm
  fi
  if [ -z "$ORDER" ] ; then
    ORDER=$thisorder
    CORPAUG=$thisaug
  else
    [ x$thisorder == x$ORDER ] \
    || die "Mismatch in ORDER: Expected $ORDER, $lmexp has $thisorder"
    [ x$thisaug == x$CORPAUG ] || [ x$PROMISEAUGMATCH == xyes ] \
    || die "Mismatch in CORPAUG: Expected $CORPAUG, $lmexp has $thisaug"
  fi
done

[ ! -z $ORDER ] || die "Failed to determine LM order"
[ ! -z $CORPAUG ] || die "Failed to determine LM augment"

# add also out combined name to our vars -- if mixlm was to be used on us again
CORP=$NAMELIST eman defvar CORP

# Remember the core settings
echo MIX.$NAMELIST+$CORPAUG.$ORDER$lmtypetag > eman.tag


TMP=/mnt/h/tmp


cat << KONEC > eman.command
echo "=============================="
echo "== Started:   "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
mydir=\$(pwd)
set -o pipefail
function die() { echo "\$@" >&2 ; eman fail \$mydir ; exit 1 ; }
renice 10 \$\$
ulimit -c 1 # core files limited to 1 byte

# init grid environment; sometimes needed for ./augment.pl
. /net/projects/SGE/user/sge_profile

SRILMDIR1="$SRILMSTEPDIR/bin/"
SRILMDIR2="$SRILMSTEPDIR/bin/i686/"

export PATH=\$SRILMDIR1:\$SRILMDIR2:\$PATH
export SCRIPTS_ROOTDIR=$SCRIPTS_ROOTDIR

echo "Using this ngram-count:"
which ngram-count

function mkcorpus() {
  $PLAYGROUND/corpman --wait \$1 || die "Failed to prepare \$1"
  step_file_col=(\$($PLAYGROUND/corpman \$1))
  if [ "\${step_file_col[2]}" == "-1" ]; then
    $PLAYGROUND/../scripts/wiseln $PLAYGROUND/\${step_file_col[0]}/\${step_file_col[1]} \\
      corpus.\$2.gz \
    || die "Failed to clone \$2 corpus \$1"
  else
    echo "Selecting the column from \$step_file_col"
    eval \$($PLAYGROUND/corpman --cmd \$1) \\
    | gzip -c > corpus.\$2.gz
  fi
}

mkcorpus $HELDOUT/$CORPAUG heldout

zcat corpus.heldout.gz > corpus.heldout

first=1
for thisfile in ${LMFILES//:/ }; do
  [ -e \$thisfile ] || thisfile=\$thisfile.gz
  [ -e \$thisfile ] || die "Not a valid lm: \$lmexp, corpus.lm(.gz) missing"
  if [ \$first == 1 ] ; then
    FILELIST=\$thisfile
    first=0
  else
    # extend the lists
    FILELIST=\$FILELIST,\$thisfile
  fi
done

echo Prepared filelist: \$FILELIST

echo Mixing LMS...
\$SCRIPTS_ROOTDIR/ems/support/interpolate-lm.perl \\
  --tuning corpus.heldout \\
  --name corpus.lm \\
  --lm \$FILELIST \\
  --srilm=$SRILMDIR2 \\
  --tempdir=$TMP \\
  || die "Mixing models failed"

gzip corpus.lm || die "Gzip failed"

# Standard command footer
echo Done.
eman succeed \$mydir
echo "=============================="
echo "== Ended:     "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
KONEC
